# Reference: https://medium.com/@miladev95/nginx-with-self-signed-certificate-on-docker-a514bb1a4061
events {
    worker_connections 1024;
}

http {
    upstream node-app {
        least_conn;
        server chatbot1:5000 max_fails=3 fail_timeout=30s;
        server chatbot2:5001 max_fails=3 fail_timeout=30s;   
    }

    upstream redis-gui {
        server redis-commander:8081 max_fails=3 fail_timeout=30s; 
    }

    upstream api-server {
        server api-server:8080 max_fails=3 fail_timeout=30s; 
    }

    server {
        listen 443 ssl;
        server_name localhost;

        ssl_certificate /etc/ssl/certs/nginx-selfsigned.crt;
        ssl_certificate_key /etc/ssl/private/nginx-selfsigned.key;

	    access_log  /var/log/nginx/access.log;
	    error_log  /var/log/nginx/error.log;

        location /1 {
            proxy_pass http://node-app;
            proxy_http_version  1.1;
            proxy_set_header    Upgrade $http_upgrade;
            proxy_set_header    Connection 'upgrade';
            proxy_set_header    Host    $http_host;
            proxy_cache_bypass  $http_upgrade;
        }

        location /index.html {
            root   html;
            index  /etc/nginx/html/index.html;
        }

        location /getAllReviews {
            proxy_pass http://api-server;
            proxy_http_version  1.1;
            proxy_set_header    Upgrade $http_upgrade;
            proxy_set_header    Connection 'upgrade';
            proxy_set_header    Host    $http_host;
            proxy_cache_bypass  $http_upgrade;
            add_header Access-Control-Allow-Origin *;
        }

    }

    server {
        listen 80;
        server_name localhost;

        access_log  /var/log/nginx/access.log;
	    error_log  /var/log/nginx/error.log;

        location / {
            proxy_pass http://redis-gui;
            proxy_http_version  1.1;
            proxy_set_header    Upgrade $http_upgrade;
            proxy_set_header    Connection 'upgrade';
            proxy_set_header    Host    $http_host;
            proxy_cache_bypass  $http_upgrade;
        }

    }
}
